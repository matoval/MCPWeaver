# Vulnerability Scanning Configuration for MCPWeaver
# This file contains configuration for the automated vulnerability scanner

# Scanner Configuration
# Enable/disable individual scanners
ENABLE_GOSEC="true"
ENABLE_NANCY="true"
ENABLE_GOVULNCHECK="true"
ENABLE_TRIVY="true"
ENABLE_SEMGREP="true"
ENABLE_SNYK="false"          # Requires API key and authentication
ENABLE_CODEQL="false"        # Requires GitHub integration

# Severity Thresholds
# Determine when the scan should fail the build
FAIL_ON_HIGH="true"          # Fail on HIGH severity vulnerabilities
FAIL_ON_MEDIUM="false"       # Fail on MEDIUM severity vulnerabilities
FAIL_ON_LOW="false"          # Fail on LOW severity vulnerabilities

# Custom Severity Limits
# Set maximum number of vulnerabilities allowed per severity
MAX_HIGH_ALLOWED="0"         # Maximum HIGH severity vulnerabilities allowed
MAX_MEDIUM_ALLOWED="5"       # Maximum MEDIUM severity vulnerabilities allowed
MAX_LOW_ALLOWED="20"         # Maximum LOW severity vulnerabilities allowed

# Scanner-specific Configuration

# gosec Configuration
GOSEC_SEVERITY="medium"      # Minimum severity to report (low, medium, high)
GOSEC_CONFIDENCE="medium"    # Minimum confidence level (low, medium, high)
GOSEC_RULES=""              # Specific rules to enable (empty = all)
GOSEC_EXCLUDE_RULES=""      # Rules to exclude (e.g., "G101,G102")

# nancy Configuration
NANCY_QUIET="false"         # Suppress non-essential output
NANCY_EXCLUDE_VULNS=""      # Vulnerability IDs to exclude

# trivy Configuration
TRIVY_SEVERITY="HIGH,CRITICAL"  # Severities to report
TRIVY_VULN_TYPE="os,library"    # Types of vulnerabilities to scan
TRIVY_IGNORE_UNFIXED="false"    # Ignore vulnerabilities without fixes
TRIVY_SKIP_UPDATE="false"       # Skip vulnerability database update

# semgrep Configuration
SEMGREP_CONFIG="auto"           # Configuration (auto, p/security-audit, etc.)
SEMGREP_EXCLUDE=""             # Paths to exclude from scanning
SEMGREP_TIMEOUT="30"           # Timeout per rule in seconds

# Reporting Configuration
GENERATE_SARIF="true"          # Generate SARIF format reports
GENERATE_HTML="true"           # Generate HTML reports when possible
GENERATE_JSON="true"           # Generate JSON reports
GENERATE_TEXT="true"           # Generate human-readable text reports

# Integration Configuration
WEBHOOK_URL=""                 # Webhook URL for scan results
SLACK_WEBHOOK=""              # Slack webhook for notifications
EMAIL_RECIPIENTS=""           # Email addresses for notifications (comma-separated)

# CI/CD Integration
CI_MODE="false"               # Running in CI/CD environment
BREAK_BUILD_ON_FAILURE="true" # Break build when vulnerabilities exceed thresholds
UPLOAD_RESULTS="false"        # Upload results to external service

# Advanced Configuration
PARALLEL_SCANS="true"         # Run scanners in parallel when possible
CACHE_RESULTS="true"          # Cache scan results for performance
INCREMENTAL_SCAN="false"      # Only scan changed files (when supported)

# Database Configuration
UPDATE_VULNERABILITY_DB="true"    # Update vulnerability databases before scanning
VULN_DB_CACHE_TTL="24"            # Vulnerability database cache TTL in hours
CUSTOM_VULN_DB_URL=""             # Custom vulnerability database URL

# Performance Configuration
MAX_SCAN_TIME="600"               # Maximum scan time in seconds (10 minutes)
MAX_MEMORY_USAGE="2048"           # Maximum memory usage in MB
MAX_PARALLEL_JOBS="4"             # Maximum parallel scanner jobs

# File and Path Configuration
SCAN_PATHS="."                    # Paths to scan (space-separated)
EXCLUDE_PATHS=".git node_modules vendor" # Paths to exclude
FILE_EXTENSIONS="go js ts yaml yml json" # File extensions to scan

# Output Configuration
RESULTS_RETENTION_DAYS="90"       # How long to keep scan results
COMPRESS_OLD_RESULTS="true"       # Compress results older than 30 days
RESULTS_FORMAT="markdown"         # Primary report format (markdown, html, json)

# Security Configuration
ANONYMIZE_RESULTS="false"         # Remove sensitive information from reports
ENCRYPT_RESULTS="false"           # Encrypt stored results
SECURE_DELETE_OLD_RESULTS="true"  # Securely delete old results

# Notification Configuration
NOTIFY_ON_NEW_VULNS="true"        # Notify when new vulnerabilities are found
NOTIFY_ON_FIXED_VULNS="true"      # Notify when vulnerabilities are fixed
NOTIFY_ON_SCAN_FAILURE="true"     # Notify when scans fail

# Custom Rules and Policies
CUSTOM_RULES_DIR=""               # Directory containing custom scanner rules
POLICY_FILE=""                    # Path to vulnerability policy file
ALLOWLIST_FILE=""                 # Path to vulnerability allowlist

# Baseline Configuration
USE_BASELINE="false"              # Use baseline comparison
BASELINE_FILE=""                  # Path to baseline scan results
UPDATE_BASELINE_ON_CLEAN="true"   # Update baseline when no new issues found

# Development vs Production
PRODUCTION_MODE="false"           # Running in production environment
DEV_MODE_RELAXED_RULES="true"     # Use relaxed rules in development mode

# Experimental Features
ENABLE_ML_DETECTION="false"       # Enable ML-based vulnerability detection
ENABLE_BEHAVIORAL_ANALYSIS="false" # Enable behavioral analysis
ENABLE_SUPPLY_CHAIN_ANALYSIS="true" # Enable supply chain vulnerability analysis

# Compliance and Standards
PCI_DSS_COMPLIANCE="false"        # Enable PCI DSS compliance checks
SOX_COMPLIANCE="false"            # Enable SOX compliance checks
HIPAA_COMPLIANCE="false"          # Enable HIPAA compliance checks
GDPR_COMPLIANCE="false"           # Enable GDPR compliance checks

# Tool Installation Configuration
AUTO_INSTALL_TOOLS="false"       # Automatically install missing tools
TOOL_INSTALL_DIR="$HOME/.local/bin" # Directory to install tools
USE_CONTAINER_TOOLS="false"      # Use containerized versions of tools

# Logging Configuration
LOG_LEVEL="INFO"                  # Log level (DEBUG, INFO, WARN, ERROR)
LOG_FILE=""                       # Log file path (empty = stdout)
VERBOSE_OUTPUT="false"            # Enable verbose output
DEBUG_MODE="false"                # Enable debug mode

# API Configuration (for tools that support it)
GITHUB_TOKEN=""                   # GitHub token for API access
SNYK_TOKEN=""                     # Snyk API token
SONARQUBE_URL=""                  # SonarQube server URL
SONARQUBE_TOKEN=""                # SonarQube authentication token

# Custom Commands
PRE_SCAN_COMMAND=""               # Command to run before scanning
POST_SCAN_COMMAND=""              # Command to run after scanning
CLEANUP_COMMAND=""                # Command to run for cleanup

# Environment-specific Overrides
# These can be overridden based on environment
if [ "${CI:-}" = "true" ]; then
    CI_MODE="true"
    BREAK_BUILD_ON_FAILURE="true"
    UPLOAD_RESULTS="true"
    NOTIFY_ON_SCAN_FAILURE="true"
fi

if [ "${ENVIRONMENT:-}" = "production" ]; then
    PRODUCTION_MODE="true"
    DEV_MODE_RELAXED_RULES="false"
    FAIL_ON_MEDIUM="true"
    MAX_MEDIUM_ALLOWED="0"
fi

if [ "${ENVIRONMENT:-}" = "development" ]; then
    PRODUCTION_MODE="false"
    DEV_MODE_RELAXED_RULES="true"
    FAIL_ON_MEDIUM="false"
    MAX_MEDIUM_ALLOWED="10"
fi