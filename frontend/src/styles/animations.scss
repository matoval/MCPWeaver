// Animations and Transitions for MCPWeaver
@import './variables.scss';

// Base Animation Classes
.animate-fade-in {
  animation: fadeIn $animation-duration-medium ease-out;
}

.animate-fade-out {
  animation: fadeOut $animation-duration-medium ease-out;
}

.animate-slide-in-left {
  animation: slideInLeft $animation-duration-medium ease-out;
}

.animate-slide-in-right {
  animation: slideInRight $animation-duration-medium ease-out;
}

.animate-slide-in-up {
  animation: slideInUp $animation-duration-medium ease-out;
}

.animate-slide-in-down {
  animation: slideInDown $animation-duration-medium ease-out;
}

.animate-scale-in {
  animation: scaleIn $animation-duration-short ease-out;
}

.animate-scale-out {
  animation: scaleOut $animation-duration-short ease-out;
}

.animate-bounce-in {
  animation: bounceIn $animation-duration-long cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

// Keyframe Definitions
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.8);
    opacity: 0;
  }
}

@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  70% {
    transform: scale(0.9);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

@keyframes progressBar {
  0% {
    width: 0%;
  }
  100% {
    width: var(--progress-width, 100%);
  }
}

// Transition Classes
.transition-all {
  transition: all $transition-normal;
}

.transition-opacity {
  transition: opacity $transition-normal;
}

.transition-transform {
  transition: transform $transition-normal;
}

.transition-colors {
  transition: background-color $transition-normal, border-color $transition-normal, color $transition-normal;
}

.transition-fast {
  transition-duration: $transition-fast;
}

.transition-slow {
  transition-duration: $transition-slow;
}

// Interactive Hover Effects
.hover-lift {
  transition: transform $transition-fast, box-shadow $transition-fast;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

.hover-scale {
  transition: transform $transition-fast;
  
  &:hover {
    transform: scale(1.05);
  }
}

.hover-glow {
  transition: box-shadow $transition-normal;
  
  &:hover {
    box-shadow: 0 0 20px var(--accent-color-alpha);
  }
}

.hover-slide {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left $transition-normal;
  }
  
  &:hover::before {
    left: 100%;
  }
}

// Loading Animations
.loading-skeleton {
  background: linear-gradient(90deg, var(--bg-secondary) 25%, var(--bg-tertiary) 50%, var(--bg-secondary) 75%);
  background-size: 200px 100%;
  animation: shimmer 1.5s infinite linear;
}

.loading-spinner {
  width: 24px;
  height: 24px;
  border: 3px solid var(--border-color);
  border-top-color: var(--accent-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.loading-dots {
  display: inline-flex;
  gap: 4px;
  
  .dot {
    width: 8px;
    height: 8px;
    background: var(--accent-color);
    border-radius: 50%;
    animation: loadingDots 1.4s infinite ease-in-out both;
    
    &:nth-child(1) { animation-delay: -0.32s; }
    &:nth-child(2) { animation-delay: -0.16s; }
    &:nth-child(3) { animation-delay: 0s; }
  }
}

@keyframes loadingDots {
  0%, 80%, 100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

// Progress Animations
.progress-bar-animated {
  animation: progressBar 2s ease-out;
}

.progress-bar-indeterminate {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background: var(--accent-color);
    animation: progressIndeterminate 2s infinite linear;
  }
}

@keyframes progressIndeterminate {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(300%);
  }
}

// Notification Animations
.notification-enter {
  animation: slideInRight $animation-duration-medium ease-out;
}

.notification-exit {
  animation: slideOutRight $animation-duration-medium ease-in;
}

@keyframes slideOutRight {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

// Modal Animations
.modal-enter {
  animation: modalEnter $animation-duration-medium ease-out;
}

.modal-exit {
  animation: modalExit $animation-duration-medium ease-in;
}

@keyframes modalEnter {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes modalExit {
  from {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  to {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
}

// Sidebar Animations
.sidebar-slide-in {
  animation: slideInLeft $animation-duration-medium ease-out;
}

.sidebar-slide-out {
  animation: slideOutLeft $animation-duration-medium ease-in;
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

// Button Animations
.button-press {
  transition: transform $transition-fast;
  
  &:active {
    transform: scale(0.98);
  }
}

.button-ripple {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width $transition-fast, height $transition-fast;
  }
  
  &:active::after {
    width: 300px;
    height: 300px;
  }
}

// Stagger Animations
.stagger-children > * {
  animation-delay: calc(var(--stagger-delay, 0.1s) * var(--index, 0));
}

// Performance Optimizations
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-auto {
  will-change: auto;
}

// GPU Acceleration
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// Reduced Motion Overrides
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in,
  .animate-fade-out,
  .animate-slide-in-left,
  .animate-slide-in-right,
  .animate-slide-in-up,
  .animate-slide-in-down,
  .animate-scale-in,
  .animate-scale-out,
  .animate-bounce-in {
    animation: none;
  }
  
  .transition-all,
  .transition-opacity,
  .transition-transform,
  .transition-colors {
    transition: none;
  }
  
  .hover-lift:hover,
  .hover-scale:hover {
    transform: none;
  }
  
  .loading-skeleton,
  .progress-bar-indeterminate::after {
    animation: none;
  }
}