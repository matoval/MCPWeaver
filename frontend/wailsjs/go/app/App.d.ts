// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {app} from '../models';
import {context} from '../models';
import {plugin} from '../models';
import {database} from '../models';

export function AddNotificationFilter(arg1:app.NotificationFilter):Promise<void>;

export function AddRecentFile(arg1:string,arg2:string):Promise<void>;

export function AddRecentProject(arg1:string):Promise<void>;

export function BackupSettings():Promise<void>;

export function BackupSettingsAPI():Promise<void>;

export function CancelGeneration(arg1:string):Promise<void>;

export function CancelScheduledUpdate():Promise<void>;

export function CancelUpdateDownload():Promise<void>;

export function CheckForUpdates():Promise<app.UpdateInfo>;

export function ClearActivityLogs(arg1:context.Context,arg2:number):Promise<number>;

export function ClearMetrics(arg1:context.Context,arg2:string):Promise<void>;

export function ClearNotificationHistory():Promise<void>;

export function ClearNotificationQueue():Promise<void>;

export function ClearRecentFiles():Promise<void>;

export function ClearRecentProjects():Promise<void>;

export function ClearValidationCache():Promise<void>;

export function CreateErrorReport(arg1:context.Context,arg2:app.ErrorType,arg3:app.ErrorSeverity,arg4:string,arg5:string,arg6:string,arg7:Error):Promise<app.ErrorReport>;

export function CreateProject(arg1:app.CreateProjectRequest):Promise<app.Project>;

export function DeleteBackup(arg1:string):Promise<void>;

export function DeleteProject(arg1:string):Promise<void>;

export function DetectFileFormat(arg1:string,arg2:string):Promise<string>;

export function DisableDoNotDisturbMode():Promise<void>;

export function DisablePlugin(arg1:context.Context,arg2:string):Promise<void>;

export function DismissAllToasts():Promise<void>;

export function DismissToast(arg1:string):Promise<void>;

export function DownloadUpdate(arg1:app.UpdateInfo):Promise<void>;

export function EnableDoNotDisturbMode(arg1:app.DoNotDisturbSchedule):Promise<void>;

export function EnablePlugin(arg1:context.Context,arg2:string):Promise<void>;

export function ExecuteNotificationAction(arg1:string,arg2:string,arg3:Record<string, any>):Promise<void>;

export function ExportActivityLogs(arg1:context.Context,arg2:app.LogExportRequest):Promise<app.LogExportResult>;

export function ExportGeneratedServer(arg1:string,arg2:string):Promise<app.ExportResult>;

export function ExportNotificationHistory(arg1:string,arg2:string):Promise<void>;

export function ExportProject(arg1:string):Promise<string>;

export function ExportSettings():Promise<string>;

export function ExportValidationResult(arg1:app.ValidationResult):Promise<string>;

export function FileExists(arg1:string):Promise<boolean>;

export function ForceGarbageCollection():Promise<void>;

export function GenerateServer(arg1:string):Promise<app.GenerationJob>;

export function GetActiveToasts():Promise<Array<app.ToastNotification>>;

export function GetActivityLogs(arg1:context.Context,arg2:app.LogFilter):Promise<Array<app.ActivityLogEntry>>;

export function GetAggregatedMetrics(arg1:context.Context,arg2:string,arg3:string):Promise<app.AggregatedMetrics>;

export function GetApplicationStatus(arg1:context.Context):Promise<app.ApplicationStatus>;

export function GetAvailableBackups():Promise<Array<app.BackupInfo>>;

export function GetDefaultOpenAPIFilters():Promise<Array<app.FileFilter>>;

export function GetErrorReports(arg1:context.Context,arg2:boolean):Promise<Array<app.ErrorReport>>;

export function GetGenerationHistory(arg1:string):Promise<Array<app.GenerationJob>>;

export function GetGenerationJob(arg1:string):Promise<app.GenerationJob>;

export function GetLastUpdateCheck():Promise<app.UpdateCheck>;

export function GetMemoryUsage():Promise<number>;

export function GetNotificationConfig():Promise<app.NotificationSystem>;

export function GetNotificationHistory(arg1:number,arg2:number,arg3:string):Promise<Array<app.NotificationHistory>>;

export function GetNotificationQueue():Promise<app.NotificationQueueStatus>;

export function GetNotificationStats():Promise<app.NotificationStats>;

export function GetPerformanceAlerts(arg1:context.Context,arg2:boolean):Promise<Array<app.PerformanceAlert>>;

export function GetPerformanceMetrics():Promise<app.PerformanceMetrics>;

export function GetPerformanceThresholds(arg1:context.Context):Promise<Record<string, any>>;

export function GetPlugin(arg1:context.Context,arg2:string):Promise<plugin.PluginInstanceAPI>;

export function GetPluginCapabilities(arg1:context.Context):Promise<Array<string>>;

export function GetPluginPermissions(arg1:context.Context):Promise<Array<string>>;

export function GetPlugins(arg1:context.Context):Promise<Record<string, plugin.PluginInstanceAPI>>;

export function GetPluginsByCapability(arg1:context.Context,arg2:string):Promise<Array<plugin.PluginInstanceAPI>>;

export function GetProject(arg1:string):Promise<app.Project>;

export function GetProjects():Promise<Array<app.Project>>;

export function GetRecentFiles():Promise<Array<app.RecentFile>>;

export function GetRecentProjects():Promise<Array<app.Project>>;

export function GetRollbackCapabilities():Promise<app.RollbackCapabilities>;

export function GetScheduledJob():Promise<app.ScheduledJob>;

export function GetSettings():Promise<app.AppSettings>;

export function GetSettingsBackupPath():Promise<string>;

export function GetSettingsFilePath():Promise<string>;

export function GetSupportedFileFormats():Promise<Array<string>>;

export function GetSystemMetrics(arg1:context.Context):Promise<app.SystemMetrics>;

export function GetTemplateMetrics(arg1:context.Context,arg2:string,arg3:string):Promise<Array<app.TemplatePerformanceMetrics>>;

export function GetUpdateAnalytics():Promise<Array<app.UpdateAnalytics>>;

export function GetUpdateConfiguration():Promise<app.UpdateConfiguration>;

export function GetUpdateHistory():Promise<Array<app.UpdateResult>>;

export function GetUpdateSettings():Promise<app.UpdateSettings>;

export function GetUpdateStatus():Promise<app.UpdateProgress>;

export function GetValidationCacheStats():Promise<database.ValidationCacheStats>;

export function HasSettingsBackup():Promise<boolean>;

export function ImportOpenAPISpec(arg1:string):Promise<app.ImportResult>;

export function ImportOpenAPISpecFromURL(arg1:string):Promise<app.ImportResult>;

export function ImportProject(arg1:string):Promise<app.Project>;

export function ImportSettings():Promise<void>;

export function InstallPlugin(arg1:context.Context,arg2:string):Promise<void>;

export function InstallUpdate():Promise<void>;

export function LoadPlugin(arg1:context.Context,arg2:string):Promise<void>;

export function LogActivity(arg1:app.LogLevel,arg2:string,arg3:string,arg4:string,arg5:Array<app.LogEntryOption>):Promise<void>;

export function MarkNotificationAsRead(arg1:string):Promise<void>;

export function MigrateAndLoadSettings():Promise<app.AppSettings>;

export function OnShutdown(arg1:context.Context):Promise<void>;

export function OnStartup(arg1:context.Context):Promise<void>;

export function PauseNotifications():Promise<void>;

export function PauseScheduledUpdate():Promise<void>;

export function PauseUpdateDownload():Promise<void>;

export function ReadFile(arg1:string):Promise<string>;

export function RemoveNotificationFilter(arg1:string):Promise<void>;

export function RemoveRecentFile(arg1:string):Promise<void>;

export function ReportError(arg1:Record<string, any>):Promise<void>;

export function ResetSettings():Promise<void>;

export function ResolveAlert(arg1:context.Context,arg2:string):Promise<void>;

export function RestoreSettingsFromBackup():Promise<void>;

export function RestoreSettingsFromBackupAPI():Promise<void>;

export function ResumeNotifications():Promise<void>;

export function ResumeScheduledUpdate():Promise<void>;

export function ResumeUpdateDownload():Promise<void>;

export function RollbackToVersion(arg1:string):Promise<void>;

export function RollbackUpdate():Promise<void>;

export function SaveFile(arg1:string,arg2:string,arg3:Array<app.FileFilter>):Promise<string>;

export function ScheduleUpdate(arg1:app.UpdateInfo,arg2:app.UpdateSchedule):Promise<void>;

export function ScheduleUpdateCheck(arg1:app.UpdateSchedule):Promise<void>;

export function SearchActivityLogs(arg1:context.Context,arg2:app.LogSearchRequest):Promise<app.LogSearchResult>;

export function SearchPlugins(arg1:context.Context,arg2:string,arg3:string,arg4:Array<string>,arg5:number):Promise<plugin.SearchResponse>;

export function SearchProjects(arg1:string):Promise<Array<app.Project>>;

export function SelectDirectory(arg1:string):Promise<string>;

export function SelectFile(arg1:Array<app.FileFilter>):Promise<string>;

export function SetPerformanceThresholds(arg1:context.Context,arg2:Record<string, any>):Promise<void>;

export function ShowErrorToast(arg1:string,arg2:string):Promise<void>;

export function ShowInfoToast(arg1:string,arg2:string):Promise<void>;

export function ShowSuccessToast(arg1:string,arg2:string):Promise<void>;

export function ShowSystemNotification(arg1:app.SystemNotification):Promise<void>;

export function ShowToastNotification(arg1:app.ToastNotification):Promise<void>;

export function ShowWarningToast(arg1:string,arg2:string):Promise<void>;

export function SkipUpdateVersion(arg1:string):Promise<void>;

export function StartPerformanceMonitoring(arg1:context.Context,arg2:string,arg3:string):Promise<app.PerformanceMonitor>;

export function TestNotificationFilter(arg1:app.NotificationFilter,arg2:app.ToastNotification):Promise<app.NotificationFilterTestResult>;

export function TestUpdateConnection():Promise<app.UpdateConnectionTest>;

export function UnloadPlugin(arg1:context.Context,arg2:string):Promise<void>;

export function UpdateAppearanceSettings(arg1:app.AppearanceSettings):Promise<void>;

export function UpdateEditorSettings(arg1:app.EditorSettings):Promise<void>;

export function UpdateGenerationSettings(arg1:app.GenerationSettings):Promise<void>;

export function UpdateLanguage(arg1:string):Promise<void>;

export function UpdateLogConfig(arg1:context.Context,arg2:app.LogConfig):Promise<void>;

export function UpdateNotificationConfig(arg1:app.NotificationSystem):Promise<void>;

export function UpdateNotificationFilter(arg1:app.NotificationFilter):Promise<void>;

export function UpdateNotificationSettings(arg1:app.NotificationSettings):Promise<void>;

export function UpdateProject(arg1:string,arg2:app.ProjectUpdateRequest):Promise<app.Project>;

export function UpdateScheduledUpdate(arg1:app.UpdateSchedule):Promise<void>;

export function UpdateSettings(arg1:app.AppSettings):Promise<void>;

export function UpdateTheme(arg1:string):Promise<void>;

export function UpdateUpdateSettings(arg1:app.UpdateSettings):Promise<void>;

export function UpdateWindowSettings(arg1:app.WindowSettings):Promise<void>;

export function ValidateBackup(arg1:string):Promise<app.BackupValidation>;

export function ValidateSpec(arg1:string):Promise<app.ValidationResult>;

export function ValidateURL(arg1:string):Promise<app.ValidationResult>;

export function ValidateUpdateConfiguration(arg1:app.UpdateConfiguration):Promise<app.UpdateConfigurationValidation>;

export function WriteFile(arg1:string,arg2:string):Promise<void>;
